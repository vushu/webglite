(ns webglite.constants)

    ;; ClearBufferMask */
(def DEPTH_BUFFER_BIT                0x00000100)
(def STENCIL_BUFFER_BIT              0x00000400)
(def COLOR_BUFFER_BIT                0x00004000)
    ;; BeginMode */
(def POINTS                          0x0000)
(def LINES                           0x0001)
(def LINE_LOOP                       0x0002)
(def LINE_STRIP                      0x0003)
(def TRIANGLES                       0x0004)
(def TRIANGLE_STRIP                  0x0005)
(def TRIANGLE_FAN                    0x0006)
    ;; AlphaFunction (not supported in ES20) */
    ;;      NEVER */
    ;;      LESS */
    ;;      EQUAL */
    ;;      LEQUAL */
    ;;      GREATER */
    ;;      NOTEQUAL */
    ;;      GEQUAL */
    ;;      ALWAYS */
    ;; BlendingFactorDest */
(def ZERO                            0)
(def ONE                             1)
(def SRC_COLOR                       0x0300)
(def ONE_MINUS_SRC_COLOR             0x0301)
(def SRC_ALPHA                       0x0302)
(def ONE_MINUS_SRC_ALPHA             0x0303)
(def DST_ALPHA                       0x0304)
(def ONE_MINUS_DST_ALPHA             0x0305)
    ;; BlendingFactorSrc */
    ;;      ZERO */
    ;;      ONE */
(def DST_COLOR                       0x0306)
(def ONE_MINUS_DST_COLOR             0x0307)
(def SRC_ALPHA_SATURATE              0x0308)
    ;;      SRC_ALPHA */
    ;;      ONE_MINUS_SRC_ALPHA */
    ;;      DST_ALPHA */
    ;;      ONE_MINUS_DST_ALPHA */
    ;; BlendEquationSeparate */
(def FUNC_ADD                        0x8006)
(def BLEND_EQUATION                  0x8009)
(def BLEND_EQUATION_RGB              0x8009)   ;; same as BLEND_EQUATION */
(def BLEND_EQUATION_ALPHA            0x883D)
    ;; BlendSubtract */
(def FUNC_SUBTRACT                   0x800A)
(def FUNC_REVERSE_SUBTRACT           0x800B)
    ;; Separate Blend Functions */
(def BLEND_DST_RGB                   0x80C8)
(def BLEND_SRC_RGB                   0x80C9)
(def BLEND_DST_ALPHA                 0x80CA)
(def BLEND_SRC_ALPHA                 0x80CB)
(def CONSTANT_COLOR                  0x8001)
(def ONE_MINUS_CONSTANT_COLOR        0x8002)
(def CONSTANT_ALPHA                  0x8003)
(def ONE_MINUS_CONSTANT_ALPHA        0x8004)
(def BLEND_COLOR                     0x8005)
    ;; Buffer Objects */
(def ARRAY_BUFFER                    0x8892)
(def ELEMENT_ARRAY_BUFFER            0x8893)
(def ARRAY_BUFFER_BINDING            0x8894)
(def ELEMENT_ARRAY_BUFFER_BINDING    0x8895)
(def STREAM_DRAW                     0x88E0)
(def STATIC_DRAW                     0x88E4)
(def DYNAMIC_DRAW                    0x88E8)
(def BUFFER_SIZE                     0x8764)
(def BUFFER_USAGE                    0x8765)
(def CURRENT_VERTEX_ATTRIB           0x8626)
    ;; CullFaceMode */
(def FRONT                           0x0404)
(def BACK                            0x0405)
(def FRONT_AND_BACK                  0x0408)
    ;; DepthFunction */
    ;;      NEVER */
    ;;      LESS */
    ;;      EQUAL */
    ;;      LEQUAL */
    ;;      GREATER */
    ;;      NOTEQUAL */
    ;;      GEQUAL */
    ;;      ALWAYS */
    ;; EnableCap */
    ;; TEXTURE_2D */
(def CULL_FACE                       0x0B44)
(def BLEND                           0x0BE2)
(def DITHER                          0x0BD0)
(def STENCIL_TEST                    0x0B90)
(def DEPTH_TEST                      0x0B71)
(def SCISSOR_TEST                    0x0C11)
(def POLYGON_OFFSET_FILL             0x8037)
(def SAMPLE_ALPHA_TO_COVERAGE        0x809E)
(def SAMPLE_COVERAGE                 0x80A0)
    ;; ErrorCode */
(def NO_ERROR                        0)
(def INVALID_ENUM                    0x0500)
(def INVALID_VALUE                   0x0501)
(def INVALID_OPERATION               0x0502)
(def OUT_OF_MEMORY                   0x0505)
    ;; FrontFaceDirection */
(def CW                              0x0900)
(def CCW                             0x0901)
    ;; GetPName */
(def LINE_WIDTH                      0x0B21)
(def ALIASED_POINT_SIZE_RANGE        0x846D)
(def ALIASED_LINE_WIDTH_RANGE        0x846E)
(def CULL_FACE_MODE                  0x0B45)
(def FRONT_FACE                      0x0B46)
(def DEPTH_RANGE                     0x0B70)
(def DEPTH_WRITEMASK                 0x0B72)
(def DEPTH_CLEAR_VALUE               0x0B73)
(def DEPTH_FUNC                      0x0B74)
(def STENCIL_CLEAR_VALUE             0x0B91)
(def STENCIL_FUNC                    0x0B92)
(def STENCIL_FAIL                    0x0B94)
(def STENCIL_PASS_DEPTH_FAIL         0x0B95)
(def STENCIL_PASS_DEPTH_PASS         0x0B96)
(def STENCIL_REF                     0x0B97)
(def STENCIL_VALUE_MASK              0x0B93)
(def STENCIL_WRITEMASK               0x0B98)
(def STENCIL_BACK_FUNC               0x8800)
(def STENCIL_BACK_FAIL               0x8801)
(def STENCIL_BACK_PASS_DEPTH_FAIL    0x8802)
(def STENCIL_BACK_PASS_DEPTH_PASS    0x8803)
(def STENCIL_BACK_REF                0x8CA3)
(def STENCIL_BACK_VALUE_MASK         0x8CA4)
(def STENCIL_BACK_WRITEMASK          0x8CA5)
(def VIEWPORT                        0x0BA2)
(def SCISSOR_BOX                     0x0C10)
    ;;      SCISSOR_TEST */
(def COLOR_CLEAR_VALUE               0x0C22)
(def COLOR_WRITEMASK                 0x0C23)
(def UNPACK_ALIGNMENT                0x0CF5)
(def PACK_ALIGNMENT                  0x0D05)
(def MAX_TEXTURE_SIZE                0x0D33)
(def MAX_VIEWPORT_DIMS               0x0D3A)
(def SUBPIXEL_BITS                   0x0D50)
(def RED_BITS                        0x0D52)
(def GREEN_BITS                      0x0D53)
(def BLUE_BITS                       0x0D54)
(def ALPHA_BITS                      0x0D55)
(def DEPTH_BITS                      0x0D56)
(def STENCIL_BITS                    0x0D57)
(def POLYGON_OFFSET_UNITS            0x2A00)
    ;;      POLYGON_OFFSET_FILL */
(def POLYGON_OFFSET_FACTOR           0x8038)
(def TEXTURE_BINDING_2D              0x8069)
(def SAMPLE_BUFFERS                  0x80A8)
(def SAMPLES                         0x80A9)
(def SAMPLE_COVERAGE_VALUE           0x80AA)
(def SAMPLE_COVERAGE_INVERT          0x80AB)
    ;; GetTextureParameter */
    ;;      TEXTURE_MAG_FILTER */
    ;;      TEXTURE_MIN_FILTER */
    ;;      TEXTURE_WRAP_S */
    ;;      TEXTURE_WRAP_T */
(def COMPRESSED_TEXTURE_FORMATS      0x86A3)
    ;; HintMode */
(def DONT_CARE                       0x1100)
(def FASTEST                         0x1101)
(def NICEST                          0x1102)
    ;; HintTarget */
(def GENERATE_MIPMAP_HINT             0x8192)
    ;; DataType */
(def BYTE                            0x1400)
(def UNSIGNED_BYTE                   0x1401)
(def SHORT                           0x1402)
(def UNSIGNED_SHORT                  0x1403)
(def INT                             0x1404)
(def UNSIGNED_INT                    0x1405)
(def FLOAT                           0x1406)
    ;; PixelFormat */
(def DEPTH_COMPONENT                 0x1902)
(def ALPHA                           0x1906)
(def RGB                             0x1907)
(def RGBA                            0x1908)
(def LUMINANCE                       0x1909)
(def LUMINANCE_ALPHA                 0x190A)
    ;; PixelType */
    ;;      UNSIGNED_BYTE */
(def UNSIGNED_SHORT_4_4_4_4          0x8033)
(def UNSIGNED_SHORT_5_5_5_1          0x8034)
(def UNSIGNED_SHORT_5_6_5            0x8363)
    ;; Shaders */
(def FRAGMENT_SHADER                   0x8B30)
(def VERTEX_SHADER                     0x8B31)
(def MAX_VERTEX_ATTRIBS                0x8869)
(def MAX_VERTEX_UNIFORM_VECTORS        0x8DFB)
(def MAX_VARYING_VECTORS               0x8DFC)
(def MAX_COMBINED_TEXTURE_IMAGE_UNITS  0x8B4D)
(def MAX_VERTEX_TEXTURE_IMAGE_UNITS    0x8B4C)
(def MAX_TEXTURE_IMAGE_UNITS           0x8872)
(def MAX_FRAGMENT_UNIFORM_VECTORS      0x8DFD)
(def SHADER_TYPE                       0x8B4F)
(def DELETE_STATUS                     0x8B80)
(def LINK_STATUS                       0x8B82)
(def VALIDATE_STATUS                   0x8B83)
(def ATTACHED_SHADERS                  0x8B85)
(def ACTIVE_UNIFORMS                   0x8B86)
(def ACTIVE_ATTRIBUTES                 0x8B89)
(def SHADING_LANGUAGE_VERSION          0x8B8C)
(def CURRENT_PROGRAM                   0x8B8D)
    ;; StencilFunction */
(def NEVER                           0x0200)
(def LESS                            0x0201)
(def EQUAL                           0x0202)
(def LEQUAL                          0x0203)
(def GREATER                         0x0204)
(def NOTEQUAL                        0x0205)
(def GEQUAL                          0x0206)
(def ALWAYS                          0x0207)
    ;; StencilOp */
    ;;      ZERO */
(def KEEP                            0x1E00)
(def REPLACE                         0x1E01)
(def INCR                            0x1E02)
(def DECR                            0x1E03)
(def INVERT                          0x150A)
(def INCR_WRAP                       0x8507)
(def DECR_WRAP                       0x8508)
    ;; StringName */
(def VENDOR                          0x1F00)
(def RENDERER                        0x1F01)
(def VERSION                         0x1F02)
    ;; TextureMagFilter */
(def NEAREST                         0x2600)
(def LINEAR                          0x2601)
    ;; TextureMinFilter */
    ;;      NEAREST */
    ;;      LINEAR */
(def NEAREST_MIPMAP_NEAREST          0x2700)
(def LINEAR_MIPMAP_NEAREST           0x2701)
(def NEAREST_MIPMAP_LINEAR           0x2702)
(def LINEAR_MIPMAP_LINEAR            0x2703)
    ;; TextureParameterName */
(def TEXTURE_MAG_FILTER              0x2800)
(def TEXTURE_MIN_FILTER              0x2801)
(def TEXTURE_WRAP_S                  0x2802)
(def TEXTURE_WRAP_T                  0x2803)
    ;; TextureTarget */
(def TEXTURE_2D                      0x0DE1)
(def TEXTURE                         0x1702)
(def TEXTURE_CUBE_MAP                0x8513)
(def TEXTURE_BINDING_CUBE_MAP        0x8514)
(def TEXTURE_CUBE_MAP_POSITIVE_X     0x8515)
(def TEXTURE_CUBE_MAP_NEGATIVE_X     0x8516)
(def TEXTURE_CUBE_MAP_POSITIVE_Y     0x8517)
(def TEXTURE_CUBE_MAP_NEGATIVE_Y     0x8518)
(def TEXTURE_CUBE_MAP_POSITIVE_Z     0x8519)
(def TEXTURE_CUBE_MAP_NEGATIVE_Z     0x851A)
(def MAX_CUBE_MAP_TEXTURE_SIZE       0x851C)
    ;; TextureUnit */
(def TEXTURE0                        0x84C0)
(def TEXTURE1                        0x84C1)
(def TEXTURE2                        0x84C2)
(def TEXTURE3                        0x84C3)
(def TEXTURE4                        0x84C4)
(def TEXTURE5                        0x84C5)
(def TEXTURE6                        0x84C6)
(def TEXTURE7                        0x84C7)
(def TEXTURE8                        0x84C8)
(def TEXTURE9                        0x84C9)
(def TEXTURE10                       0x84CA)
(def TEXTURE11                       0x84CB)
(def TEXTURE12                       0x84CC)
(def TEXTURE13                       0x84CD)
(def TEXTURE14                       0x84CE)
(def TEXTURE15                       0x84CF)
(def TEXTURE16                       0x84D0)
(def TEXTURE17                       0x84D1)
(def TEXTURE18                       0x84D2)
(def TEXTURE19                       0x84D3)
(def TEXTURE20                       0x84D4)
(def TEXTURE21                       0x84D5)
(def TEXTURE22                       0x84D6)
(def TEXTURE23                       0x84D7)
(def TEXTURE24                       0x84D8)
(def TEXTURE25                       0x84D9)
(def TEXTURE26                       0x84DA)
(def TEXTURE27                       0x84DB)
(def TEXTURE28                       0x84DC)
(def TEXTURE29                       0x84DD)
(def TEXTURE30                       0x84DE)
(def TEXTURE31                       0x84DF)
(def ACTIVE_TEXTURE                  0x84E0)
    ;; TextureWrapMode */
(def REPEAT                          0x2901)
(def CLAMP_TO_EDGE                   0x812F)
(def MIRRORED_REPEAT                 0x8370)
    ;; Uniform Types */
(def FLOAT_VEC2                      0x8B50)
(def FLOAT_VEC3                      0x8B51)
(def FLOAT_VEC4                      0x8B52)
(def INT_VEC2                        0x8B53)
(def INT_VEC3                        0x8B54)
(def INT_VEC4                        0x8B55)
(def BOOL                            0x8B56)
(def BOOL_VEC2                       0x8B57)
(def BOOL_VEC3                       0x8B58)
(def BOOL_VEC4                       0x8B59)
(def FLOAT_MAT2                      0x8B5A)
(def FLOAT_MAT3                      0x8B5B)
(def FLOAT_MAT4                      0x8B5C)
(def SAMPLER_2D                      0x8B5E)
(def SAMPLER_CUBE                    0x8B60)
    ;; Vertex Arrays */
(def VERTEX_ATTRIB_ARRAY_ENABLED         0x8622)
(def VERTEX_ATTRIB_ARRAY_SIZE            0x8623)
(def VERTEX_ATTRIB_ARRAY_STRIDE          0x8624)
(def VERTEX_ATTRIB_ARRAY_TYPE            0x8625)
(def VERTEX_ATTRIB_ARRAY_NORMALIZED      0x886A)
(def VERTEX_ATTRIB_ARRAY_POINTER         0x8645)
(def VERTEX_ATTRIB_ARRAY_BUFFER_BINDING  0x889F)
    ;; Shader Source */
(def COMPILE_STATUS                  0x8B81)
    ;; Shader Precision-Specified Types */
(def LOW_FLOAT                       0x8DF0)
(def MEDIUM_FLOAT                    0x8DF1)
(def HIGH_FLOAT                      0x8DF2)
(def LOW_INT                         0x8DF3)
(def MEDIUM_INT                      0x8DF4)
(def HIGH_INT                        0x8DF5)
    ;; Framebuffer Object. */
(def FRAMEBUFFER                     0x8D40)
(def RENDERBUFFER                    0x8D41)
(def RGBA4                           0x8056)
(def RGB5_A1                         0x8057)
(def RGB565                          0x8D62)
(def DEPTH_COMPONENT16               0x81A5)
(def STENCIL_INDEX8                  0x8D48)
(def DEPTH_STENCIL                   0x84F9)
(def RENDERBUFFER_WIDTH              0x8D42)
(def RENDERBUFFER_HEIGHT             0x8D43)
(def RENDERBUFFER_INTERNAL_FORMAT    0x8D44)
(def RENDERBUFFER_RED_SIZE           0x8D50)
(def RENDERBUFFER_GREEN_SIZE         0x8D51)
(def RENDERBUFFER_BLUE_SIZE          0x8D52)
(def RENDERBUFFER_ALPHA_SIZE         0x8D53)
(def RENDERBUFFER_DEPTH_SIZE         0x8D54)
(def RENDERBUFFER_STENCIL_SIZE       0x8D55)
(def FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE            0x8CD0)
(def FRAMEBUFFER_ATTACHMENT_OBJECT_NAME            0x8CD1)
(def FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL          0x8CD2)
(def FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE  0x8CD3)
(def COLOR_ATTACHMENT0               0x8CE0)
(def DEPTH_ATTACHMENT                0x8D00)
(def STENCIL_ATTACHMENT              0x8D20)
(def DEPTH_STENCIL_ATTACHMENT        0x821A)
(def NONE                            0)
(def FRAMEBUFFER_COMPLETE                       0x8CD5)
(def FRAMEBUFFER_INCOMPLETE_ATTACHMENT          0x8CD6)
(def FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT  0x8CD7)
(def FRAMEBUFFER_INCOMPLETE_DIMENSIONS          0x8CD9)
(def FRAMEBUFFER_UNSUPPORTED                    0x8CDD)
(def FRAMEBUFFER_BINDING             0x8CA6)
(def RENDERBUFFER_BINDING            0x8CA7)
(def MAX_RENDERBUFFER_SIZE           0x84E8)
(def INVALID_FRAMEBUFFER_OPERATION   0x0506)
(def IMPLEMENTATION_COLOR_READ_TYPE  0x8B9A)
(def IMPLEMENTATION_COLOR_READ_FORMAT  0x8B9B)
;; WebGL-specific enums */
(def UNPACK_FLIP_Y_WEBGL                 0x9240)
(def UNPACK_PREMULTIPLY_ALPHA_WEBGL      0x9241)
(def CONTEXT_LOST_WEBGL                  0x9242)
(def UNPACK_COLORSPACE_CONVERSION_WEBGL  0x9243)
(def BROWSER_DEFAULT_WEBGL               0x9244)
;; WebGL2 enums */
(def READ_BUFFER  0x0C02)
(def UNPACK_ROW_LENGTH  0x0CF2)
(def UNPACK_SKIP_ROWS  0x0CF3)
(def UNPACK_SKIP_PIXELS  0x0CF4)
(def PACK_ROW_LENGTH  0x0D02)
(def PACK_SKIP_ROWS  0x0D03)
(def PACK_SKIP_PIXELS  0x0D04)
(def COLOR  0x1800)
(def DEPTH  0x1801)
(def STENCIL  0x1802)
(def RED  0x1903)
(def RGB8  0x8051)
(def RGBA8  0x8058)
(def RGB10_A2  0x8059)
(def TEXTURE_BINDING_3D  0x806A)
(def UNPACK_SKIP_IMAGES  0x806D)
(def UNPACK_IMAGE_HEIGHT  0x806E)
(def TEXTURE_3D  0x806F)
(def TEXTURE_WRAP_R  0x8072)
(def MAX_3D_TEXTURE_SIZE  0x8073)
(def UNSIGNED_INT_2_10_10_10_REV  0x8368)
(def MAX_ELEMENTS_VERTICES  0x80E8)
(def MAX_ELEMENTS_INDICES  0x80E9)
(def TEXTURE_MIN_LOD  0x813A)
(def TEXTURE_MAX_LOD  0x813B)
(def TEXTURE_BASE_LEVEL  0x813C)
(def TEXTURE_MAX_LEVEL  0x813D)
(def MIN  0x8007)
(def MAX  0x8008)
(def DEPTH_COMPONENT24  0x81A6)
(def MAX_TEXTURE_LOD_BIAS  0x84FD)
(def TEXTURE_COMPARE_MODE  0x884C)
(def TEXTURE_COMPARE_FUNC  0x884D)
(def CURRENT_QUERY  0x8865)
(def QUERY_RESULT  0x8866)
(def QUERY_RESULT_AVAILABLE  0x8867)
(def STREAM_READ  0x88E1)
(def STREAM_COPY  0x88E2)
(def STATIC_READ  0x88E5)
(def STATIC_COPY  0x88E6)
(def DYNAMIC_READ  0x88E9)
(def DYNAMIC_COPY  0x88EA)
(def MAX_DRAW_BUFFERS  0x8824)
(def DRAW_BUFFER0  0x8825)
(def DRAW_BUFFER1  0x8826)
(def DRAW_BUFFER2  0x8827)
(def DRAW_BUFFER3  0x8828)
(def DRAW_BUFFER4  0x8829)
(def DRAW_BUFFER5  0x882A)
(def DRAW_BUFFER6  0x882B)
(def DRAW_BUFFER7  0x882C)
(def DRAW_BUFFER8  0x882D)
(def DRAW_BUFFER9  0x882E)
(def DRAW_BUFFER10  0x882F)
(def DRAW_BUFFER11  0x8830)
(def DRAW_BUFFER12  0x8831)
(def DRAW_BUFFER13  0x8832)
(def DRAW_BUFFER14  0x8833)
(def DRAW_BUFFER15  0x8834)
(def MAX_FRAGMENT_UNIFORM_COMPONENTS  0x8B49)
(def MAX_VERTEX_UNIFORM_COMPONENTS  0x8B4A)
(def SAMPLER_3D  0x8B5F)
(def SAMPLER_2D_SHADOW  0x8B62)
(def FRAGMENT_SHADER_DERIVATIVE_HINT  0x8B8B)
(def PIXEL_PACK_BUFFER  0x88EB)
(def PIXEL_UNPACK_BUFFER  0x88EC)
(def PIXEL_PACK_BUFFER_BINDING  0x88ED)
(def PIXEL_UNPACK_BUFFER_BINDING  0x88EF)
(def FLOAT_MAT2x3  0x8B65)
(def FLOAT_MAT2x4  0x8B66)
(def FLOAT_MAT3x2  0x8B67)
(def FLOAT_MAT3x4  0x8B68)
(def FLOAT_MAT4x2  0x8B69)
(def FLOAT_MAT4x3  0x8B6A)
(def SRGB  0x8C40)
(def SRGB8  0x8C41)
(def SRGB8_ALPHA8  0x8C43)
(def COMPARE_REF_TO_TEXTURE  0x884E)
(def RGBA32F  0x8814)
(def RGB32F  0x8815)
(def RGBA16F  0x881A)
(def RGB16F  0x881B)
(def VERTEX_ATTRIB_ARRAY_INTEGER  0x88FD)
(def MAX_ARRAY_TEXTURE_LAYERS  0x88FF)
(def MIN_PROGRAM_TEXEL_OFFSET  0x8904)
(def MAX_PROGRAM_TEXEL_OFFSET  0x8905)
(def MAX_VARYING_COMPONENTS  0x8B4B)
(def TEXTURE_2D_ARRAY  0x8C1A)
(def TEXTURE_BINDING_2D_ARRAY  0x8C1D)
(def R11F_G11F_B10F  0x8C3A)
(def UNSIGNED_INT_10F_11F_11F_REV  0x8C3B)
(def RGB9_E5  0x8C3D)
(def UNSIGNED_INT_5_9_9_9_REV  0x8C3E)
(def TRANSFORM_FEEDBACK_BUFFER_MODE  0x8C7F)
(def MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS  0x8C80)
(def TRANSFORM_FEEDBACK_VARYINGS  0x8C83)
(def TRANSFORM_FEEDBACK_BUFFER_START  0x8C84)
(def TRANSFORM_FEEDBACK_BUFFER_SIZE  0x8C85)
(def TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN  0x8C88)
(def RASTERIZER_DISCARD  0x8C89)
(def MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS  0x8C8A)
(def MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS  0x8C8B)
(def INTERLEAVED_ATTRIBS  0x8C8C)
(def SEPARATE_ATTRIBS  0x8C8D)
(def TRANSFORM_FEEDBACK_BUFFER  0x8C8E)
(def TRANSFORM_FEEDBACK_BUFFER_BINDING  0x8C8F)
(def RGBA32UI  0x8D70)
(def RGB32UI  0x8D71)
(def RGBA16UI  0x8D76)
(def RGB16UI  0x8D77)
(def RGBA8UI  0x8D7C)
(def RGB8UI  0x8D7D)
(def RGBA32I  0x8D82)
(def RGB32I  0x8D83)
(def RGBA16I  0x8D88)
(def RGB16I  0x8D89)
(def RGBA8I  0x8D8E)
(def RGB8I  0x8D8F)
(def RED_INTEGER  0x8D94)
(def RGB_INTEGER  0x8D98)
(def RGBA_INTEGER  0x8D99)
(def SAMPLER_2D_ARRAY  0x8DC1)
(def SAMPLER_2D_ARRAY_SHADOW  0x8DC4)
(def SAMPLER_CUBE_SHADOW  0x8DC5)
(def UNSIGNED_INT_VEC2  0x8DC6)
(def UNSIGNED_INT_VEC3  0x8DC7)
(def UNSIGNED_INT_VEC4  0x8DC8)
(def INT_SAMPLER_2D  0x8DCA)
(def INT_SAMPLER_3D  0x8DCB)
(def INT_SAMPLER_CUBE  0x8DCC)
(def INT_SAMPLER_2D_ARRAY  0x8DCF)
(def UNSIGNED_INT_SAMPLER_2D  0x8DD2)
(def UNSIGNED_INT_SAMPLER_3D  0x8DD3)
(def UNSIGNED_INT_SAMPLER_CUBE  0x8DD4)
(def UNSIGNED_INT_SAMPLER_2D_ARRAY  0x8DD7)
(def DEPTH_COMPONENT32F  0x8CAC)
(def DEPTH32F_STENCIL8  0x8CAD)
(def FLOAT_32_UNSIGNED_INT_24_8_REV  0x8DAD)
(def FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING  0x8210)
(def FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE  0x8211)
(def FRAMEBUFFER_ATTACHMENT_RED_SIZE  0x8212)
(def FRAMEBUFFER_ATTACHMENT_GREEN_SIZE  0x8213)
(def FRAMEBUFFER_ATTACHMENT_BLUE_SIZE  0x8214)
(def FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE  0x8215)
(def FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE  0x8216)
(def FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE  0x8217)
(def FRAMEBUFFER_DEFAULT  0x8218)
(def UNSIGNED_INT_24_8  0x84FA)
(def DEPTH24_STENCIL8  0x88F0)
(def UNSIGNED_NORMALIZED  0x8C17)
(def DRAW_FRAMEBUFFER_BINDING  0x8CA6)
(def READ_FRAMEBUFFER  0x8CA8)
(def DRAW_FRAMEBUFFER  0x8CA9)
(def READ_FRAMEBUFFER_BINDING  0x8CAA)
(def RENDERBUFFER_SAMPLES  0x8CAB)
(def FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER  0x8CD4)
(def MAX_COLOR_ATTACHMENTS  0x8CDF)
(def COLOR_ATTACHMENT1  0x8CE1)
(def COLOR_ATTACHMENT2  0x8CE2)
(def COLOR_ATTACHMENT3  0x8CE3)
(def COLOR_ATTACHMENT4  0x8CE4)
(def COLOR_ATTACHMENT5  0x8CE5)
(def COLOR_ATTACHMENT6  0x8CE6)
(def COLOR_ATTACHMENT7  0x8CE7)
(def COLOR_ATTACHMENT8  0x8CE8)
(def COLOR_ATTACHMENT9  0x8CE9)
(def COLOR_ATTACHMENT10  0x8CEA)
(def COLOR_ATTACHMENT11  0x8CEB)
(def COLOR_ATTACHMENT12  0x8CEC)
(def COLOR_ATTACHMENT13  0x8CED)
(def COLOR_ATTACHMENT14  0x8CEE)
(def COLOR_ATTACHMENT15  0x8CEF)
(def FRAMEBUFFER_INCOMPLETE_MULTISAMPLE  0x8D56)
(def MAX_SAMPLES  0x8D57)
(def HALF_FLOAT  0x140B)
(def RG  0x8227)
(def RG_INTEGER  0x8228)
(def R8  0x8229)
(def RG8  0x822B)
(def R16F  0x822D)
(def R32F  0x822E)
(def RG16F  0x822F)
(def RG32F  0x8230)
(def R8I  0x8231)
(def R8UI  0x8232)
(def R16I  0x8233)
(def R16UI  0x8234)
(def R32I  0x8235)
(def R32UI  0x8236)
(def RG8I  0x8237)
(def RG8UI  0x8238)
(def RG16I  0x8239)
(def RG16UI  0x823A)
(def RG32I  0x823B)
(def RG32UI  0x823C)
(def VERTEX_ARRAY_BINDING  0x85B5)
(def R8_SNORM  0x8F94)
(def RG8_SNORM  0x8F95)
(def RGB8_SNORM  0x8F96)
(def RGBA8_SNORM  0x8F97)
(def SIGNED_NORMALIZED  0x8F9C)
(def COPY_READ_BUFFER  0x8F36)
(def COPY_WRITE_BUFFER  0x8F37)
(def COPY_READ_BUFFER_BINDING  0x8F36)
(def COPY_WRITE_BUFFER_BINDING  0x8F37)
(def UNIFORM_BUFFER  0x8A11)
(def UNIFORM_BUFFER_BINDING  0x8A28)
(def UNIFORM_BUFFER_START  0x8A29)
(def UNIFORM_BUFFER_SIZE  0x8A2A)
(def MAX_VERTEX_UNIFORM_BLOCKS  0x8A2B)
(def MAX_FRAGMENT_UNIFORM_BLOCKS  0x8A2D)
(def MAX_COMBINED_UNIFORM_BLOCKS  0x8A2E)
(def MAX_UNIFORM_BUFFER_BINDINGS  0x8A2F)
(def MAX_UNIFORM_BLOCK_SIZE  0x8A30)
(def MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS  0x8A31)
(def MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS  0x8A33)
(def UNIFORM_BUFFER_OFFSET_ALIGNMENT  0x8A34)
(def ACTIVE_UNIFORM_BLOCKS  0x8A36)
(def UNIFORM_TYPE  0x8A37)
(def UNIFORM_SIZE  0x8A38)
(def UNIFORM_BLOCK_INDEX  0x8A3A)
(def UNIFORM_OFFSET  0x8A3B)
(def UNIFORM_ARRAY_STRIDE  0x8A3C)
(def UNIFORM_MATRIX_STRIDE  0x8A3D)
(def UNIFORM_IS_ROW_MAJOR  0x8A3E)
(def UNIFORM_BLOCK_BINDING  0x8A3F)
(def UNIFORM_BLOCK_DATA_SIZE  0x8A40)
(def UNIFORM_BLOCK_ACTIVE_UNIFORMS  0x8A42)
(def UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES  0x8A43)
(def UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER  0x8A44)
(def UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER  0x8A46)
(def INVALID_INDEX  0xFFFFFFFF)
(def MAX_VERTEX_OUTPUT_COMPONENTS  0x9122)
(def MAX_FRAGMENT_INPUT_COMPONENTS  0x9125)
(def MAX_SERVER_WAIT_TIMEOUT  0x9111)
(def OBJECT_TYPE  0x9112)
(def SYNC_CONDITION  0x9113)
(def SYNC_STATUS  0x9114)
(def SYNC_FLAGS  0x9115)
(def SYNC_FENCE  0x9116)
(def SYNC_GPU_COMMANDS_COMPLETE  0x9117)
(def UNSIGNALED  0x9118)
(def SIGNALED  0x9119)
(def ALREADY_SIGNALED  0x911A)
(def TIMEOUT_EXPIRED  0x911B)
(def CONDITION_SATISFIED  0x911C)
(def WAIT_FAILED  0x911D)
(def SYNC_FLUSH_COMMANDS_BIT  0x00000001)
(def TIMEOUT_IGNORED  -1)
(def VERTEX_ATTRIB_ARRAY_DIVISOR  0x88FE)
(def ANY_SAMPLES_PASSED  0x8C2F)
(def ANY_SAMPLES_PASSED_CONSERVATIVE  0x8D6A)
(def SAMPLER_BINDING  0x8919)
(def RGB10_A2UI  0x906F)
(def INT_2_10_10_10_REV  0x8D9F)
(def TRANSFORM_FEEDBACK  0x8E22)
(def TRANSFORM_FEEDBACK_PAUSED  0x8E23)
(def TRANSFORM_FEEDBACK_ACTIVE  0x8E24)
(def TRANSFORM_FEEDBACK_BINDING  0x8E25)
(def TEXTURE_IMMUTABLE_FORMAT  0x912F)
(def MAX_ELEMENT_INDEX  0x8D6B)
(def TEXTURE_IMMUTABLE_LEVELS  0x82DF)
;; WebGL-specific enums */
(def MAX_CLIENT_WAIT_TIMEOUT_WEBGL 0x9247)
